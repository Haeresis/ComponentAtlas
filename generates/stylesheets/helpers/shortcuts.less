.create-icon(@class, @value) {
	.@{class} {
		> span {display: none;}
		.fa-icon();
		&:before { 
			content: @value;
		}
	}
}
.boxSizingBorderBox() {
	* {
	 	-webkit-box-sizing: border-box;
	  	   -moz-box-sizing: border-box;
	   		    box-sizing: border-box;
	}
}
.clear-left() {
	&:after {
		content: "";
		display: block;
		clear: left;
	}
}
.transform(@value) {
	-webkit-transform: @value;
	   -moz-transform: @value;
		-ms-transform: @value;
		 -o-transform: @value;
			transform: @value;
}
.transition(@value) {
	-webkit-transition: @value;
	   -moz-transition: @value;
	    -ms-transition: @value;
	     -o-transition: @value;
	        transition: @value;
}
.rotate(@value) {
	-webkit-transform: rotate(@value);
	   -moz-transform: rotate(@value);
		-ms-transform: rotate(@value);
		 -o-transform: rotate(@value);
			transform: rotate(@value);
}
.translateX(@value) {
	-webkit-transform: translateX(@value);
	   -moz-transform: translateX(@value);
		-ms-transform: translateX(@value);
		 -o-transform: translateX(@value);
			transform: translateX(@value);
}
.translateY(@value) {
	-webkit-transform: translateY(@value);
	   -moz-transform: translateY(@value);
		-ms-transform: translateY(@value);
		 -o-transform: translateY(@value);
			transform: translateY(@value);
}
.translateCenter(@value) {
	-webkit-transform: translate(@value, @value);
	   -moz-transform: translate(@value, @value);
		-ms-transform: translate(@value, @value);
		 -o-transform: translate(@value, @value);
			transform: translate(@value, @value);
}
.transformNone() {
	-webkit-transform: none;
	   -moz-transform: none;
		-ms-transform: none;
		 -o-transform: none;
			transform: none;
}